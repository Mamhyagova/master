{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/todoc/client/src/App.js\";\nimport React from \"react\";\nimport Tasks from \"./Tasks\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Tasks {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"todo-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.currentTask,\n              required: true,\n              onChange: this.handleChange,\n              placeholder: \"What needs to be done?\",\n              className: \"input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onClick: () => this.handleUpdate(task._id),\n              className: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: task.completed ? \"task line_through\" : \"task\",\n              children: task.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.handleDelete(task._id),\n              color: \"secondary\",\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/todoc/client/src/App.js"],"names":["React","Tasks","App","state","tasks","currentTask","render","handleSubmit","handleChange","map","task","completed","handleUpdate","_id","handleDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAlB,CAAwB;AAAA;AAAA;AAAA,SACtBE,KADsB,GACd;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,WAAW,EAAE;AAA1B,KADc;AAAA;;AAEtBC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAE,KAAKI,YADjB;AAEE,UAAA,SAAS,EAAC,WAFZ;AAAA,iCAIE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACA;AACE,cAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,WADpB;AAEE,cAAA,QAAQ,EAAE,IAFZ;AAGE,cAAA,QAAQ,EAAE,KAAKG,YAHjB;AAIE,cAAA,WAAW,EAAC,wBAJd;AAKE,cAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,oBADA,eAQA;AACE,cAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAqBE;AAAA,oBACGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACT;AAAmB,YAAA,SAAS,EAAC,WAA7B;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAEA,IAAI,CAACC,SAFhB;AAGE,cAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkBF,IAAI,CAACG,GAAvB,CAHjB;AAIE,cAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AAAK,cAAA,SAAS,EAAEH,IAAI,CAACC,SAAL,GAAiB,mBAAjB,GAAuC,MAAvD;AAAA,wBACGD,IAAI,CAACA;AADR;AAAA;AAAA;AAAA;AAAA,oBAPF,eAUE;AACE,cAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkBJ,IAAI,CAACG,GAAvB,CADjB;AAEE,cAAA,KAAK,EAAC,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA,aAASH,IAAI,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA+CD;;AAnDqB;;AAsDxB,eAAeX,GAAf","sourcesContent":["import React from \"react\";\nimport Tasks from \"./Tasks\";\nimport \"./App.css\";\n\nclass App extends Tasks {\n  state = { tasks: [], currentTask: \"\" };\n  render() {\n    const { tasks } = this.state;\n    return (\n      <div className=\"todos\">\n        <div className=\"container\">\n          <h1 className=\"heading\">todos</h1>\n          <form\n            onSubmit={this.handleSubmit}\n            className=\"todo-list\"\n          >\n            <div className=\"input-container\">\n            <input\n              value={this.state.currentTask}\n              required={true}\n              onChange={this.handleChange}\n              placeholder=\"What needs to be done?\"\n              className=\"input\"\n            />\n            <button\n              type=\"submit\"\n            >\n              Add task\n            </button>\n            </div>\n          </form>\n          <ul>\n            {tasks.map((task) => (\n              <li key={task._id} className=\"list-item\">\n                <input\n                  type=\"checkbox\"\n                  checked={task.completed}\n                  onClick={() => this.handleUpdate(task._id)}\n                  className=\"checkbox\"\n                                  />\n                <div className={task.completed ? \"task line_through\" : \"task\"}>\n                  {task.task}\n                </div>\n                <button\n                  onClick={() => this.handleDelete(task._id)}\n                  color=\"secondary\"\n                >\n                  delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}