{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/todoc/client/src/App.js\";\nimport React from \"react\";\nimport Tasks from \"./Tasks\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Tasks {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"markAll-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.currentTask,\n            required: true,\n            onChange: this.handleChange,\n            placeholder: \"What needs to be done?\",\n            className: \"input\",\n            onKey: this.handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onClick: () => this.handleUpdate(task._id),\n              className: \"checkbox\",\n              id: task._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: task.completed ? \"close\" : \"\",\n              htmlFor: task.id,\n              children: task.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.handleDelete(task._id),\n              className: \"delete-button\",\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/todoc/client/src/App.js"],"names":["React","Tasks","App","state","tasks","currentTask","render","handleChange","handleSubmit","map","task","completed","handleUpdate","_id","id","handleDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAlB,CAAwB;AAAA;AAAA;AAAA,SACtBE,KADsB,GACd;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,WAAW,EAAE;AAA1B,KADc;AAAA;;AAEtBC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,KAAK,EAAE,KAAKA,KAAL,CAAWE,WADpB;AAEE,YAAA,QAAQ,EAAE,IAFZ;AAGE,YAAA,QAAQ,EAAE,KAAKE,YAHjB;AAIE,YAAA,WAAW,EAAC,wBAJd;AAKE,YAAA,SAAS,EAAC,OALZ;AAME,YAAA,KAAK,EAAE,KAAKC;AANd;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAaE;AAAA,oBACGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACT;AAAmB,YAAA,SAAS,EAAC,WAA7B;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAEA,IAAI,CAACC,SAFhB;AAGE,cAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkBF,IAAI,CAACG,GAAvB,CAHjB;AAIE,cAAA,SAAS,EAAC,UAJZ;AAKE,cAAA,EAAE,EAAEH,IAAI,CAACG;AALX;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AACE,cAAA,SAAS,EAAEH,IAAI,CAACC,SAAL,GAAiB,OAAjB,GAA2B,EADxC;AAEE,cAAA,OAAO,EAAED,IAAI,CAACI,EAFhB;AAAA,wBAIGJ,IAAI,CAACA;AAJR;AAAA;AAAA;AAAA;AAAA,oBARF,eAcE;AACE,cAAA,OAAO,EAAE,MAAM,KAAKK,YAAL,CAAkBL,IAAI,CAACG,GAAvB,CADjB;AAEE,cAAA,SAAS,EAAC,eAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA,aAASH,IAAI,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2CD;;AA/CqB;;AAkDxB,eAAeX,GAAf","sourcesContent":["import React from \"react\";\nimport Tasks from \"./Tasks\";\nimport \"./App.css\";\n\nclass App extends Tasks {\n  state = { tasks: [], currentTask: \"\" };\n  render() {\n    const { tasks } = this.state;\n    return (\n      <div className=\"todos\">\n        <div className=\"container\">\n          <h1 className=\"heading\">todos</h1>\n            <div className=\"input-container\">\n              <button className=\"markAll-button\" />\n              <input\n                value={this.state.currentTask}\n                required={true}\n                onChange={this.handleChange}\n                placeholder=\"What needs to be done?\"\n                className=\"input\"\n                onKey={this.handleSubmit}\n              />\n            </div>\n          <ul>\n            {tasks.map((task) => (\n              <li key={task._id} className=\"list-item\">\n                <input\n                  type=\"checkbox\"\n                  checked={task.completed}\n                  onClick={() => this.handleUpdate(task._id)}\n                  className=\"checkbox\"\n                  id={task._id}\n                />\n                <label\n                  className={task.completed ? \"close\" : \"\"}\n                  htmlFor={task.id}\n                >\n                  {task.task}\n                </label>\n                <button\n                  onClick={() => this.handleDelete(task._id)}\n                  className=\"delete-button\"\n                >\n                  delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}