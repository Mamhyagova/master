{"ast":null,"code":"import React, { Component } from \"react\";\nimport { addTask, getTasks, updateTask, deleteTask } from \"./services/taskServices\";\n\nclass Tasks extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n\n    this.handleChange = _ref => {\n      let {\n        currentTarget: input\n      } = _ref;\n      this.setState({\n        currentTask: input.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.prevetDefault();\n      const originalTask = this.state.tasks;\n\n      try {\n        const {\n          data\n        } = await addTask({\n          task: this.state.currentTask\n        });\n        const tasks = originalTask;\n        this.setState({\n          tasks,\n          currentTask: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleUpdate = async currentTask => {\n      const originalTasks = this.state.tasks;\n\n      try {\n        const tasks = [...originalTasks];\n        const index = tasks.findIndex(task => task._id === currentTask);\n        tasks[index] = { ...tasks[index]\n        };\n        tasks[index].completed = !tasks[index].completed;\n        this.setState({\n          tasks\n        });\n        await updateTask(currentTask, {\n          completed: tasks[index].completed\n        });\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n\n    this.handleDelete = async currentTask => {\n      const originalTasks = this.state.tasks;\n\n      try {\n        const tasks = originalTasks.filter(task => task._id !== currentTask);\n        this.setState({\n          tasks\n        });\n        await deleteTask(currentTask);\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data\n      } = await getTasks();\n      this.setState({\n        tasks: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/home/user/Desktop/todoc/client/src/Tasks.js"],"names":["React","Component","addTask","getTasks","updateTask","deleteTask","Tasks","state","tasks","currentTask","handleChange","currentTarget","input","setState","value","handleSubmit","e","prevetDefault","originalTask","data","task","error","console","log","handleUpdate","originalTasks","index","findIndex","_id","completed","handleDelete","filter","componentDidMount"],"mappings":"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","sourcesContent":["import React ,{Component} from \"react\";\nimport {\n  addTask,\n  getTasks,\n  updateTask,\n  deleteTask,\n} from \"./services/taskServices\";\n\nclass Tasks extends Component {\n  state = { tasks: [], currentTask: \"\" };\n\n  async componentDidMount() {\n    try {\n      const { data } = await getTasks();\n      this.setState({ tasks: data });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleChange = ({ currentTarget: input }) => {\n    this.setState({ currentTask: input.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.prevetDefault();\n    const originalTask = this.state.tasks;\n    try {\n      const { data } = await addTask({ task: this.state.currentTask });\n      const tasks = originalTask;\n      this.setState({ tasks, currentTask: \"\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleUpdate = async (currentTask) => {\n    const originalTasks = this.state.tasks;\n    try {\n      const tasks = [...originalTasks];\n      const index = tasks.findIndex((task) => task._id === currentTask);\n      tasks[index] = { ...tasks[index] };\n      tasks[index].completed = !tasks[index].completed;\n      this.setState({ tasks });\n      await updateTask(currentTask, { completed: tasks[index].completed });\n    } catch (error) {\n      this.setState({ tasks: originalTasks });\n      console.log(error);\n    }\n  };\n\n  handleDelete = async (currentTask) => {\n    const originalTasks = this.state.tasks;\n    try {\n      const tasks = originalTasks.filter((task) => task._id !== currentTask);\n      this.setState({ tasks });\n      await deleteTask(currentTask);\n    } catch (error) {\n      this.setState({ tasks: originalTasks });\n      console.log(error);\n    }\n  };\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}